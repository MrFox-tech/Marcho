@mixin pseudo($display: block, $pos: absolute, $content: '') {
	content: $content;
	display: $display;
	position: $pos;
}

@mixin font-face($font-family, $url, $weight) {
	@font-face {
		font-family: '#{$font-family}';
		src: url('../fonts/#{$url}.woff') format('woff'), url('../fonts/#{$url}.woff2') format('woff2');
		font-weight: #{$weight};
		font-display: swap;
		font-style: normal;
	}
}

$breakpoints: (
	'phone': 560px,
	'tablet': 768px,
	'tablet-2': 992px,
	'desktop': 1230px,
);
@mixin mq($width, $type: min) {
	@if map_has_key($breakpoints, $width) {
		$width: map_get($breakpoints, $width);
		@if $type == max {
			$width: $width - 1px;
		}
		@media only screen and (#{$type}-width: $width) {
			@content;
		}
	}
}

@mixin burger {
	width: $burgerWidth; //указываем ширину линий
	height: $burgerHeight; //указываем высоту линий
	position: relative;
	color: $burgerColor; //указываем цвет линий

	&__line {
		position: absolute;
		left: 0;
		top: 50%;
		transform: translateY(-50%);
		width: 100%;
		height: $burgerLineHeight; //указываем расстояние между линиями
		background-color: currentColor;
		transition: transform 0.3s ease-in-out;
	}

	&::before,
	&::after {
		content: '';
		position: absolute;
		left: 0;
		width: 100%;
		height: $burgerLineHeight;
		background-color: currentColor;
		transition: transform 0.3s ease-in-out, top 0.3s ease-in-out;
	}

	&::before {
		top: 0;
	}

	&::after {
		top: calc(100% - $burgerLineHeight);
	}

	&--active {
		.burger__line {
			transform: scale(0);
			transition: transform 0.3s ease-in-out;
		}

		&::before {
			transform: rotate(45deg);
			top: 50%;
			transition: transform 0.3s ease-in-out, top 0.3s ease-in-out;
		}

		&::after {
			transform: rotate(-45deg);
			top: 50%;
			transition: transform 0.3s ease-in-out, top 0.3s ease-in-out;
		}
	}
}
